// ============================================ method 1 ============================================
class Solution {
    public int findPeakElement(int[] nums) {
        int left = 0; 
         int right = nums.length-1;

         while(left<right){
            int mid = left + (right-left)/2;
        if(nums[mid] > nums[mid+1]){
            right = mid;
        }else{
            left = mid+1;
        }
        }
        return left;
    }
}

// ========================================== method 2 =========================================
 class Solution{
    public int findPeakElement(int[]arr){
        int n = arr.length;
        int peakElement = 0;
        if(n==1){
            return 0;
        }

        for(int i = 0; i<n; i++){
            if(i==0){ //start index
                if(arr[i+1]>arr[i]){
                    peakElement = i+1;
                }
                }
                else if (i == n-1) {///last index
                    if(arr[i-1]<arr[i]){
                        peakElement = i;
                    }
        }
        else { //neighbour check
            if (arr[i-1] < arr[i] && arr[i+1]<arr[i]){
                peakElement = i;
            }
        }
    }
    return peakElement;
}
}


// ====================================== method 3 =================================================
public class Solution{
    public int findPeakElement(int [] arr){
        int n = arr.length;
        int peakElement = 0;
        int low = 0; 
        int high = arr.length-1;
        if(n==1){
            return 0;
        }

        while(low<=high){
            int mid = (low+high)/2;
            if(mid>0 && mid<n-1){
                if(arr[mid]>arr[mid-1] && arr[mid] > arr[mid+1]){
                    return mid;
                }
                else if (arr[mid-1]>arr[mid]){
                    high = mid-1;
                }
                else{
                    low = mid+1;
                }
            }
                else if(mid==0){
                    if(arr[0]>arr[1]){
                        return 0;
                    }
                    else{
                        return 1;
                    }
                }
                else if( mid == n-1){
                if(arr[n-1]>arr[n-2]){
                    return n-1;
                }
                else{
                    return n-2;
                }
                }
            }
            return 0;
        }
    }
    

class Solution {
    public ListNode mergeTwoLists(ListNode list1, ListNode list2) {
       // if any of the linked list is empty
       if(list1==null){
        return list2;
       } 
       if(list2==null){
        return list1;
       }
       // We need to choose a head
       ListNode head = null;
       if(list1.val <= list2.val){
        head = list1;
        list1 = list1.next;
       }
       else{
        head = list2;
        list2 = list2.next;
       }

       // traverse the rest of the list
       ListNode temp = head;
       while(list1 != null && list2 != null){
        if(list1.val<list2.val){
            temp.next = list1;
            list1 = list1.next;
        }
        else{
            temp.next = list2;
            list2 = list2.next;
        }
        temp = temp.next;
       }
       // remaining list when one is exhausted
       temp.next = list1==null?list2:list1;
       return head;
    }
}

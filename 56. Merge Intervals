class Solution {
    public int[][] merge(int[][] intervals) {
        //step 1 - sort the intervals
       Arrays.sort(intervals, (a,b)->a[0]-b[0]);// a = {1,3}, b = {2,6}      
    // step 3 - store the intervals in the array
       List<int[]> result = new ArrayList <>();
    // step 2 - traverse the intervals
       for (int [] interval : intervals){
        //add intervals if result is empty or the end time<start time
        if(result.isEmpty() || result.get(result.size() -1)[1]<interval[0]){ //[0] for start [1] for end time
            result.add(interval);

        }else{
            //overlapping happen
            result.get(result.size()-1)[1] = Math.max(result.get(result.size()-1)[1],interval[1]);
        }
       }
       return result.toArray (new int [result.size()][]);
    }
}

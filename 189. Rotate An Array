class Solution {
============================================== Method 1 ========================================================
    void reverse ( int [] nums, int starting, int ending){
        while(starting<ending){
            int temp = nums[starting];
            nums[starting] = nums[ending];
            nums[ending] = temp;
            starting++;
            ending--;
        }
    }
    public void rotate(int[] nums, int k) {
        k = k% nums.length;// prevent from array out of bound
        reverse(nums, 0, nums.length-1); //reverse once
        reverse(nums, 0, k-1);// reverse twice
        reverse(nums, k, nums.length-1); // reverse thrice
    }

============================================== Method 2 ========================================================    
    //brute Force, TC O(K&N)
    public void rotateBruteForce(int[] nums, int k) {
        for( int j = 0; j<k; j++){
        int ele = nums[nums.length-1];
        for ( int i = nums.length -2; i>=0; i--){
            nums[i+1] = nums[i];
        }
        nums[0] = ele;
        }
    }
}

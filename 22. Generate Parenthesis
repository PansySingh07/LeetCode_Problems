class Solution {
    public List<String> generateParenthesis(int n) {
        List<String> result = new ArrayList<>();
        helper(0, 0, 0, "", result, n);
        return result;
    }
    public void helper (int opening, int closing, int index, String output,
    List<String> result, int n ){
        //base case
        if(index == n*2){
            result.add(output);
            return;
        }
        // rule 1 = 1 opening<n
        if (opening<n){
            helper(opening+1, closing, index+1, output + "(", result, n);
                }
        // rule 1 = 2 closing<opening (can I place closing)
        if(closing<opening){
            helper(opening, closing+1, index+1, output + ")", result, n);
        }
    }
}
